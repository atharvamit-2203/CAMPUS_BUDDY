version: '3.9'

services:
  database:
    image: mysql:8.0
    container_name: campus_db
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./backend/campus_connect_mysql_complete.sql:/docker-entrypoint-initdb.d/00_schema.sql:ro
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 10

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: campus_backend
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      MYSQL_HOST: database
      MYSQL_PORT: 3306
      MYSQL_USER: ${MYSQL_USER:-root}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-changeme}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-campus_connect}
      SECRET_KEY: ${SECRET_KEY:-please-change-me}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES:-60}
      MYSQL_POOL_SIZE: ${MYSQL_POOL_SIZE:-10}
      MYSQL_MAX_OVERFLOW: ${MYSQL_MAX_OVERFLOW:-20}
      MYSQL_ECHO: ${MYSQL_ECHO:-False}
    depends_on:
      database:
        condition: service_healthy
    ports:
      - "8000:8000"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: campus_frontend
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://backend:8000}
    depends_on:
      - backend
    ports:
      - "3000:3000"

volumes:
  db_data:
